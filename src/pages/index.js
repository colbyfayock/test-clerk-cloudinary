import { useState } from 'react';
import Head from 'next/head'
import Link from 'next/link'
import { Inter } from 'next/font/google'
import {
  SignedIn,
  SignedOut,
  SignInButton,
  UserButton,
  useUser
} from "@clerk/nextjs";

import styles from '@/styles/Home.module.scss'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const { user } = useUser();

  const [image, setImage] = useState();
  const [uploadData, setUploadData] = useState();

  /**
   * handleOnChange
   * @description Triggers when the file input changes (ex: when a file is selected)
   */

  function handleOnChange(e) {
    const reader = new FileReader();

    reader.onload = function(onLoadEvent) {
      setImage(onLoadEvent.target.result);
      setUploadData(undefined);
    }

    reader.readAsDataURL(e.target.files[0]);
  }

  async function handleOnSubmit(event) {
    event.preventDefault();
    
    const data = await fetch('/api/upload', {
      method: 'POST',
      body: JSON.stringify({
        image: image
      })
    }).then(r => r.json());

    setUploadData(data);
  }

  async function handleOnUpgrade(e) {
    e.preventDefault();
    await fetch('/api/role', {
      method: 'POST',
      body: JSON.stringify({
        role: 'premium'
      })
    });
  }

  async function handleOnDowngrade(e) {
    e.preventDefault();
    await fetch('/api/role', {
      method: 'POST',
      body: JSON.stringify({
        role: 'free'
      })
    });
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div>
          <SignedIn>
            <UserButton />
            <p>{ user?.publicMetadata.role }</p>
            <button onClick={handleOnUpgrade}>Upgrade</button>
            <button onClick={handleOnDowngrade}>Downgrade</button>
          </SignedIn>
          <SignedOut>
            <Link href="/sign-in">Sign In</Link>
          </SignedOut>
        </div>

        <form className={styles.form} method="post" onChange={handleOnChange} onSubmit={handleOnSubmit}>
          <p>
            <input type="file" name="file" />
          </p>
          
          <img src={image} />
          
          {image && !uploadData && (
            <p>
              <button>Upload Files</button>
            </p>
          )}

          {uploadData && (
            <code><pre>{JSON.stringify(uploadData, null, 2)}</pre></code>
          )}
        </form>
      </main>
    </>
  )
}
